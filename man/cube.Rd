% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cubes.R
\name{cube}
\alias{cube}
\title{Cubes management functions}
\usage{
cube(name, remote = default_remote())
}
\arguments{
\item{name}{A \code{character} text with cube name.}

\item{remote}{A \code{character} text with remote name.}
}
\value{
A \code{EOCubes_cube} data structure.
}
\description{
Fetches a registered cube and its data.
}
\details{
#' @title Cubes management functions
#'
#' @name with_tiles
#'
#' @description This is a helper function that construct a list of parameters
#' to be passed to \code{get_cube} function.
#'
#' @param prefix   A \code{character} vector containing tile name prefix(es)
#'
#' @return A \code{list} parameters to select tiles from cubes.
#'
#' @export
#'
with_tiles <- function(geom = NULL, prefix = NULL) {

res <- list()

if (!is.null(geom) & !any(c("sfc", "sf") %in% class(geom)))
        stop("`geom` parameter must be a `sfc` or `sf` object class from `sf` package.")

res$geom <- geom
    res$prefix <- prefix

return(res)
}
#' @title Cubes management functions
#'
#' @name with_stacks
#'
#' @description This is a helper function that construct a list of parameters
#' to be passed to \code{get_cube} function.
#'
#' @param prefix   A \code{character} vector containing stack name prefix(es)
#'
#' @return A \code{list} parameters to select stacks from tiles.
#'
#' @export
#'
with_stacks <- function(prefix = NULL) {

res <- list()
    res$prefix = prefix

return(res)
}
#' @title Cubes management functions
#'
#' @name with_layers
#'
#' @description This is a helper function that construct a list of parameters
#' to be passed to \code{get_cube} function.
#'
#' @param start_dates   A \code{date} vector to filter layers by date.
#' @param end_dates   A \code{date} vector to filter layers by date.
#' @param count   An \code{integer} with the mandatory number of layers in each interval.
#'
#' @return A \code{list} parameters to select layers from stacks.
#'
#' @details The \code{start_dates} and \code{end_dates} parameters values can
#' be a character vector containing dates in format \code{"\%Y-\%m-\%d"}.
#' Both parameters must have the same length.
#'
#' @export
#'
with_layers <- function(start_dates = NULL, end_dates = NULL, count = NULL) {

res <- list()
    res$start_dates <- start_dates
    res$end_dates <- end_dates
    res$count <- count

return(res)
}
}
